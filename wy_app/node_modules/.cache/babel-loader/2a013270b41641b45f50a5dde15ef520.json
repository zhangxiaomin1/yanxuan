{"remainingRequest":"d:\\YX\\project\\wy_v\\wy_app\\node_modules\\babel-loader\\lib\\index.js!d:\\YX\\project\\wy_v\\wy_app\\src\\main.js","dependencies":[{"path":"d:\\YX\\project\\wy_v\\wy_app\\src\\main.js","mtime":1542003644582},{"path":"d:\\YX\\project\\wy_v\\wy_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853417988},{"path":"d:\\YX\\project\\wy_v\\wy_app\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; // 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css';\nimport Vuex from \"vuex\"; //引入Vuex组件\n\nVue.use(Vuex); //注册组件中所有内容\n//创建Vuex对象:共享数据，操作方法，获取并监听数据方法\n\nvar store = new Vuex.Store({\n  state: {\n    //共享数据\n    cartCount: 0 //共享数据购物车中数量\n\n  },\n  mutations: {\n    //操作共享数据方法\n    increment: function increment(state, num) {\n      state.cartCount += num;\n    },\n    substract: function substract(state) {\n      state.cartCount--;\n    },\n    clearcount: function clearcount(state) {\n      state.cartCount = 0;\n    }\n  },\n  getters: {\n    optCount: function optCount(state) {\n      //获取并监听数据方法\n      return state.cartCount;\n    }\n  }\n}); //1.引入Header组件\n\nimport { Header, Swipe, SwipeItem, Button } from \"mint-ui\"; //2.注册Header组件\n\nVue.component(Header.name, Header); //标签名(默认mt-header),组件对象\n\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Button.name, Button); //3.引入VueResource到当前项目中\n\nimport VueResource from \"vue-resource\"; //4.加载VueResource\n\nVue.use(VueResource); //5.定义全局(日期格式)过滤器\n//第三方模块 moment 过滤日期\n//自定义\n//dataFormat 过滤器名称\n//datastr 用户日期\n\nVue.filter(\"dataFormat\", function (datastr) {\n  var pattern = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"YYYY-MM-DD\";\n  return new Date(datastr).toLocaleString();\n}); //6.设置全局ajax访问基础路径\n\nVue.http.options.root = \"http://127.0.0.1:3000\"; //7.设置全局ajax post访问格式\n\nVue.http.options.emulateJSON = true;\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //将Vuex对象注册到vue对象中\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","config","productionTip","Vuex","use","store","Store","state","cartCount","mutations","increment","num","substract","clearcount","getters","optCount","Header","Swipe","SwipeItem","Button","component","name","VueResource","filter","datastr","pattern","Date","toLocaleString","http","options","root","emulateJSON","render","h","$mount"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAM,uBAAN;AAEAF,IAAIG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAA0B;;AAC1BL,IAAIM,GAAJ,CAAQD,IAAR,E,CAAgB;AAChB;;AACA,IAAIE,QAAM,IAAIF,KAAKG,KAAT,CAAe;AACvBC,SAAM;AAAc;AAClBC,eAAU,CADN,CACc;;AADd,GADiB;AAIvBC,aAAU;AAAQ;AAChBC,aADQ,qBACEH,KADF,EACQI,GADR,EACY;AAACJ,YAAMC,SAAN,IAAiBG,GAAjB;AAAqB,KADlC;AAERC,aAFQ,qBAEEL,KAFF,EAEQ;AAACA,YAAMC,SAAN;AAAkB,KAF3B;AAGRK,cAHQ,sBAGGN,KAHH,EAGS;AAACA,YAAMC,SAAN,GAAgB,CAAhB;AAAkB;AAH5B,GAJa;AASvBM,WAAQ;AACNC,cAAS,kBAASR,KAAT,EAAe;AAAI;AAC1B,aAAOA,MAAMC,SAAb;AACD;AAHK;AATe,CAAf,CAAV,C,CAgBA;;AACA,SAAQQ,MAAR,EAAeC,KAAf,EAAqBC,SAArB,EAA+BC,MAA/B,QAA4C,SAA5C,C,CAEA;;AACArB,IAAIsB,SAAJ,CAAcJ,OAAOK,IAArB,EAA0BL,MAA1B,E,CACI;;AACJlB,IAAIsB,SAAJ,CAAcH,MAAMI,IAApB,EAAyBJ,KAAzB;AACAnB,IAAIsB,SAAJ,CAAcF,UAAUG,IAAxB,EAA6BH,SAA7B;AACApB,IAAIsB,SAAJ,CAAcD,OAAOE,IAArB,EAA0BF,MAA1B,E,CACA;;AACA,OAAOG,WAAP,MAAwB,cAAxB,C,CACA;;AACAxB,IAAIM,GAAJ,CAAQkB,WAAR,E,CACA;AACA;AACA;AACA;AACA;;AACAxB,IAAIyB,MAAJ,CAAW,YAAX,EAAwB,UAASC,OAAT,EAAsC;AAAA,MAArBC,OAAqB,uEAAb,YAAa;AAC5D,SAAO,IAAIC,IAAJ,CAASF,OAAT,EAAkBG,cAAlB,EAAP;AACD,CAFD,E,CAGA;;AACA7B,IAAI8B,IAAJ,CAASC,OAAT,CAAiBC,IAAjB,GAAsB,uBAAtB,C,CACA;;AACAhC,IAAI8B,IAAJ,CAASC,OAAT,CAAiBE,WAAjB,GAA6B,IAA7B;AAEA,IAAIjC,GAAJ,CAAQ;AACNE,gBADM;AAENgC,UAAQ;AAAA,WAAKC,EAAElC,GAAF,CAAL;AAAA,GAFF;AAGNM,cAHM,CAGI;;AAHJ,CAAR,EAIG6B,MAJH,CAIU,MAJV","sourceRoot":"d:\\YX\\project\\wy_v\\wy_app","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport'mint-ui/lib/style.css'\r\n\r\nVue.config.productionTip = false\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\nimport Vuex from \"vuex\"   //引入Vuex组件\r\nVue.use(Vuex)   //注册组件中所有内容\r\n//创建Vuex对象:共享数据，操作方法，获取并监听数据方法\r\nvar store=new Vuex.Store({\r\n  state:{             //共享数据\r\n    cartCount:0       //共享数据购物车中数量\r\n  },   \r\n  mutations:{       //操作共享数据方法\r\n    increment(state,num){state.cartCount+=num},\r\n    substract(state){state.cartCount--},\r\n    clearcount(state){state.cartCount=0}\r\n  }, \r\n  getters:{\r\n    optCount:function(state){   //获取并监听数据方法\r\n      return state.cartCount;\r\n    }\r\n  }    \r\n});\r\n\r\n//1.引入Header组件\r\nimport {Header,Swipe,SwipeItem,Button} from \"mint-ui\"\r\n\r\n//2.注册Header组件\r\nVue.component(Header.name,Header);\r\n    //标签名(默认mt-header),组件对象\r\nVue.component(Swipe.name,Swipe);\r\nVue.component(SwipeItem.name,SwipeItem);\r\nVue.component(Button.name,Button);\r\n//3.引入VueResource到当前项目中\r\nimport VueResource from \"vue-resource\"\r\n//4.加载VueResource\r\nVue.use(VueResource)\r\n//5.定义全局(日期格式)过滤器\r\n//第三方模块 moment 过滤日期\r\n//自定义\r\n//dataFormat 过滤器名称\r\n//datastr 用户日期\r\nVue.filter(\"dataFormat\",function(datastr,pattern=\"YYYY-MM-DD\"){\r\n  return new Date(datastr).toLocaleString();\r\n})\r\n//6.设置全局ajax访问基础路径\r\nVue.http.options.root=\"http://127.0.0.1:3000\";\r\n//7.设置全局ajax post访问格式\r\nVue.http.options.emulateJSON=true;\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store     //将Vuex对象注册到vue对象中\r\n}).$mount('#app')\r\n"]}]}